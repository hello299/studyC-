掌握的函数适配器的类型
bind1st:绑定固定值到二元函数的第一个参数位置
bind2nd 绑定固定值到二元函数的第二个参数的位置
not1 生成一元函数的逻辑反函数
not2生成二元函数的逻辑反函数
ptr_fun

绑定器：binder通过把二元函数对象的一个实际参数绑定到一个特殊的值上，将其转换成一元函数对象
bind1st指的是把值绑定到二元函数对象的第一个实际参数上
bind2nd指的是把值绑定到第二个实际参数上
取反器：negator  是一个将函数对象的值翻转的函数适配器 
not1翻转一元预定义函数对象的真值，而not2翻转二元为此函数的真值？？

理解谓词与仿函数
谓词：就是一个判别式：返回bool类型的值或者仿函数  几元谓词就是对应的函数有几个参数，
仿函数就是写个类，然后重载operator函数，一般使用在返回值需要bool类型的函数作为参数的函数内部

一般在STL中_if后缀的函数都需要一个谓词，谓词函数的限制是：比较的对象必须是一个常量且必须在函数里面出现

但是如果说在你项目中我们传入的界限是个变量， 比如说找出长度大于n的个数往往需要用以下方法操作
见代码

仿函数 是通过重载()运算符模拟函数行为的类
仿函数不是函数 是一个类
仿函数重载了（）运算符
重载operator()要带（）   如sort(a,a+len,TestIndex());

https://www.cnblogs.com/youxin/archive/2012/07/09/2582530.html（网址写的很好）

疑虑解开：
因为：bind2nd将greater<int>函数与一个数字进行绑定 所以返回的是一个一元函数对象，所以使用not1，而不是not2

此时的f代表的是：bind2nd(greater，100)
fn 代表的是bind2nd(greater，？？？)

函数指针做函数的参数 本质就是回调函数 